{
	"name": "01_spark",
	"properties": {
		"folder": {
			"name": "Module 02"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "synapsespark",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "14063d8a-8715-4d0f-a416-71c271844ac7"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/b895a719-7034-411a-9944-ff196d1f450f/resourceGroups/rg-dp-500-platform/providers/Microsoft.Synapse/workspaces/synapse-3mstaeetovkk4/bigDataPools/synapsespark",
				"name": "synapsespark",
				"type": "Spark",
				"endpoint": "https://synapse-3mstaeetovkk4.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/synapsespark",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Set up variable for later reference. Make sure the name of your datalake is correct"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"datalake = 'datalake3mstaeetovkk4'"
				],
				"execution_count": 2
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Just read in some data using CSV format (notice we do not have header information in the file)"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://landing@' + datalake + '.dfs.core.windows.net/Allfiles/01/data/2020.csv', format='csv', header=False)\r\n",
					"display(df.limit(10))"
				],
				"execution_count": 7
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Notice that the file does not contain any field names in the header. Let's print the schema"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df.printSchema()"
				],
				"execution_count": 9
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Let's define our own schema on read"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"from pyspark.sql import types\r\n",
					"\r\n",
					"customSchema = types.StructType([\r\n",
					"    types.StructField(\"SalesOrderNumber\", types.StringType(), True),\r\n",
					"    types.StructField(\"SalesTerritoryKey\", types.IntegerType(), True),\r\n",
					"    types.StructField(\"OrderDate\", types.DateType(), True),\r\n",
					"    types.StructField(\"Customer\", types.StringType(), True),\r\n",
					"    types.StructField(\"Email\", types.StringType(), True),\r\n",
					"    types.StructField(\"Adress\", types.StringType(), True),\r\n",
					"    types.StructField(\"Quantity\", types.IntegerType(), True),\r\n",
					"    types.StructField(\"UnitPrice\", types.DoubleType(), True),\r\n",
					"    types.StructField(\"ShippingCost\", types.DoubleType(), True),\r\n",
					"])\r\n",
					"\r\n",
					"df = spark.read \\\r\n",
					"    .csv('abfss://landing@' + datalake + '.dfs.core.windows.net/Allfiles/01/data/2020.csv', schema=customSchema)\r\n",
					"\r\n",
					"display(df.limit(10))"
				],
				"execution_count": 13
			}
		]
	}
}