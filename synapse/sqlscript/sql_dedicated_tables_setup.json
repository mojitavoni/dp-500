{
	"name": "sql_dedicated_tables_setup",
	"properties": {
		"folder": {
			"name": "Module 04"
		},
		"content": {
			"query": "-- generate sql to drop tables\nSELECT 'DROP TABLE ' + '[' + TABLE_SCHEMA + '].[' + TABLE_NAME + ']'\nFROM INFORMATION_SCHEMA.TABLES\nORDER BY TABLE_SCHEMA, TABLE_NAME\n\n-- copy delete statements and execute\nDROP TABLE [dbo].[DimDate]\nDROP TABLE [dbo].[DimGeography]\nDROP TABLE [dbo].[FactInternetSales]\nDROP TABLE [Staging].[FactInternetSales]\n\n-- start creating all tables\n\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [dbo].[FactInternetSales](\n\t[SalesOrderNumber] [nvarchar](20) NOT NULL,\n\t[SalesOrderLineNumber] [tinyint] NOT NULL,\n\t[CustomerKey] [int] NOT NULL,\n\t[ProductKey] [int] NOT NULL,\n\t[OrderDateKey] [int] NOT NULL,\n\t[DueDateKey] [int] NOT NULL,\n\t[ShipDateKey] [int] NULL,\n\t[PromotionKey] [int] NOT NULL,\n\t[CurrencyKey] [int] NOT NULL,\n\t[SalesTerritoryKey] [int] NOT NULL,\n\t[OrderQuantity] [smallint] NOT NULL,\n\t[UnitPrice] [money] NOT NULL,\n\t[ExtendedAmount] [money] NOT NULL,\n\t[UnitPriceDiscountPct] [decimal](7, 4) NOT NULL,\n\t[DiscountAmount] [float] NOT NULL,\n\t[ProductStandardCost] [money] NOT NULL,\n\t[TotalProductCost] [money] NOT NULL,\n\t[SalesAmount] [money] NOT NULL,\n\t[TaxAmount] [money] NOT NULL,\n\t[FreightAmount] [money] NOT NULL,\n\t[CarrierTrackingNumber] [nvarchar](25) NULL,\n\t[CustomerPONumber] [nvarchar](25) NULL,\n\t[RevisionNumber] [tinyint] NOT NULL\n)\n\nGO\nCREATE TABLE [dbo].[DimCustomer](\n\t[CustomerKey] [int] IDENTITY(1,1) NOT NULL,\n\t[GeographyKey] [int] NULL,\n\t[CustomerAlternateKey] [nvarchar](15) NOT NULL,\n\t[Title] [nvarchar](8) NULL,\n\t[FirstName] [nvarchar](50) NULL,\n\t[MiddleName] [nvarchar](50) NULL,\n\t[LastName] [nvarchar](50) NULL,\n\t[NameStyle] [bit] NULL,\n\t[BirthDate] [date] NULL,\n\t[MaritalStatus] [nchar](1) NULL,\n\t[Suffix] [nvarchar](10) NULL,\n\t[Gender] [nvarchar](1) NULL,\n\t[EmailAddress] [nvarchar](50) NULL,\n\t[YearlyIncome] [money] NULL,\n\t[TotalChildren] [tinyint] NULL,\n\t[NumberChildrenAtHome] [tinyint] NULL,\n\t[EnglishEducation] [nvarchar](40) NULL,\n\t[SpanishEducation] [nvarchar](40) NULL,\n\t[FrenchEducation] [nvarchar](40) NULL,\n\t[EnglishOccupation] [nvarchar](100) NULL,\n\t[SpanishOccupation] [nvarchar](100) NULL,\n\t[FrenchOccupation] [nvarchar](100) NULL,\n\t[HouseOwnerFlag] [nchar](1) NULL,\n\t[NumberCarsOwned] [tinyint] NULL,\n\t[AddressLine1] [nvarchar](120) NULL,\n\t[AddressLine2] [nvarchar](120) NULL,\n\t[Phone] [nvarchar](20) NULL,\n\t[DateFirstPurchase] [date] NULL,\n\t[CommuteDistance] [nvarchar](15) NULL\n)\n\nGO\nCREATE TABLE [dbo].[DimDate](\n\t[DateKey] [int] NOT NULL,\n\t[FullDateAlternateKey] [date] NOT NULL,\n\t[DayNumberOfWeek] [tinyint] NOT NULL,\n\t[EnglishDayNameOfWeek] [nvarchar](10) NOT NULL,\n\t[SpanishDayNameOfWeek] [nvarchar](10) NOT NULL,\n\t[FrenchDayNameOfWeek] [nvarchar](10) NOT NULL,\n\t[DayNumberOfMonth] [tinyint] NOT NULL,\n\t[DayNumberOfYear] [smallint] NOT NULL,\n\t[WeekNumberOfYear] [tinyint] NOT NULL,\n\t[EnglishMonthName] [nvarchar](10) NOT NULL,\n\t[SpanishMonthName] [nvarchar](10) NOT NULL,\n\t[FrenchMonthName] [nvarchar](10) NOT NULL,\n\t[MonthNumberOfYear] [tinyint] NOT NULL,\n\t[CalendarQuarter] [tinyint] NOT NULL,\n\t[CalendarYear] [smallint] NOT NULL,\n\t[CalendarSemester] [tinyint] NOT NULL,\n\t[FiscalQuarter] [tinyint] NOT NULL,\n\t[FiscalYear] [smallint] NOT NULL,\n\t[FiscalSemester] [tinyint] NOT NULL\n)\n\nGO\nCREATE TABLE [dbo].[DimGeography](\n\t[GeographyKey] [int] IDENTITY(1,1) NOT NULL,\n\t[City] [nvarchar](30) NULL,\n\t[StateProvinceCode] [nvarchar](3) NULL,\n\t[StateProvinceName] [nvarchar](50) NULL,\n\t[CountryRegionCode] [nvarchar](3) NULL,\n\t[EnglishCountryRegionName] [nvarchar](50) NULL,\n\t[SpanishCountryRegionName] [nvarchar](50) NULL,\n\t[FrenchCountryRegionName] [nvarchar](50) NULL,\n\t[PostalCode] [nvarchar](15) NULL,\n\t[SalesTerritoryKey] [int] NULL,\n\t[IpAddressLocator] [nvarchar](15) NULL)\n\nGO\nCREATE TABLE [dbo].[DimProduct](\n\t[ProductKey] [int] IDENTITY(1,1) NOT NULL,\n\t[ProductAlternateKey] [nvarchar](25) NULL,\n\t[ProductSubcategoryKey] [int] NULL,\n\t[WeightUnitMeasureCode] [nchar](3) NULL,\n\t[SizeUnitMeasureCode] [nchar](3) NULL,\n\t[EnglishProductName] [nvarchar](50) NOT NULL,\n\t[SpanishProductName] [nvarchar](50) NOT NULL,\n\t[FrenchProductName] [nvarchar](50) NOT NULL,\n\t[StandardCost] [money] NULL,\n\t[FinishedGoodsFlag] [bit] NOT NULL,\n\t[Color] [nvarchar](15) NOT NULL,\n\t[SafetyStockLevel] [smallint] NULL,\n\t[ReorderPoint] [smallint] NULL,\n\t[ListPrice] [money] NULL,\n\t[Size] [nvarchar](50) NULL,\n\t[SizeRange] [nvarchar](50) NULL,\n\t[Weight] [float] NULL,\n\t[DaysToManufacture] [int] NULL,\n\t[ProductLine] [nchar](2) NULL,\n\t[DealerPrice] [money] NULL,\n\t[Class] [nchar](2) NULL,\n\t[Style] [nchar](2) NULL,\n\t[ModelName] [nvarchar](50) NULL,\n\t[LargePhoto] [varbinary](max) NULL,\n\t[EnglishDescription] [nvarchar](400) NULL,\n\t[FrenchDescription] [nvarchar](400) NULL,\n\t[ChineseDescription] [nvarchar](400) NULL,\n\t[ArabicDescription] [nvarchar](400) NULL,\n\t[HebrewDescription] [nvarchar](400) NULL,\n\t[ThaiDescription] [nvarchar](400) NULL,\n\t[GermanDescription] [nvarchar](400) NULL,\n\t[JapaneseDescription] [nvarchar](400) NULL,\n\t[TurkishDescription] [nvarchar](400) NULL,\n\t[StartDate] [datetime] NULL,\n\t[EndDate] [datetime] NULL,\n\t[Status] [nvarchar](7) NULL)\nWITH  \n  (   \n    CLUSTERED INDEX (ProductKey)  \n  ); \nGO\n\nCREATE TABLE [dbo].[DimProductCategory](\n\t[ProductCategoryKey] [int] IDENTITY(1,1) NOT NULL,\n\t[ProductCategoryAlternateKey] [int] NULL,\n\t[EnglishProductCategoryName] [nvarchar](50) NOT NULL,\n\t[SpanishProductCategoryName] [nvarchar](50) NOT NULL,\n\t[FrenchProductCategoryName] [nvarchar](50) NOT NULL)\n\nGO\nCREATE TABLE [dbo].[DimProductSubcategory](\n\t[ProductSubcategoryKey] [int] IDENTITY(1,1) NOT NULL,\n\t[ProductSubcategoryAlternateKey] [int] NULL,\n\t[EnglishProductSubcategoryName] [nvarchar](50) NOT NULL,\n\t[SpanishProductSubcategoryName] [nvarchar](50) NOT NULL,\n\t[FrenchProductSubcategoryName] [nvarchar](50) NOT NULL,\n\t[ProductCategoryKey] [int] NULL)\nGO\n\nCREATE TABLE [dbo].[DimSalesTerritory](\n\t[SalesTerritoryKey] [int] IDENTITY(1,1) NOT NULL,\n\t[SalesTerritoryAlternateKey] [int] NULL,\n\t[SalesTerritoryRegion] [nvarchar](50) NOT NULL,\n\t[SalesTerritoryCountry] [nvarchar](50) NOT NULL,\n\t[SalesTerritoryGroup] [nvarchar](50) NULL,\n\t[SalesTerritoryImage] [varbinary](max) NULL)\nWITH  \n  (   \n    CLUSTERED INDEX (SalesTerritoryKey)  \n  ); \nGO\n\n\n-- vDMPrep will be used as a data source by the other data mining views.  \n-- Uses DW data at customer, product, day, etc. granularity and\n-- gets region, model, year, month, etc.\nCREATE VIEW [dbo].[vDMPrep]\nAS\n    SELECT\n        pc.[EnglishProductCategoryName]\n        ,Coalesce(p.[ModelName], p.[EnglishProductName]) AS [Model]\n        ,c.[CustomerKey]\n        ,s.[SalesTerritoryGroup] AS [Region]\n        ,CASE\n            WHEN Month(GetDate()) < Month(c.[BirthDate])\n                THEN DateDiff(yy,c.[BirthDate],GetDate()) - 1\n            WHEN Month(GetDate()) = Month(c.[BirthDate])\n            AND Day(GetDate()) < Day(c.[BirthDate])\n                THEN DateDiff(yy,c.[BirthDate],GetDate()) - 1\n            ELSE DateDiff(yy,c.[BirthDate],GetDate())\n        END AS [Age]\n        ,CASE\n            WHEN c.[YearlyIncome] < 40000 THEN 'Low'\n            WHEN c.[YearlyIncome] > 60000 THEN 'High'\n            ELSE 'Moderate'\n        END AS [IncomeGroup]\n        ,d.[CalendarYear]\n        ,d.[FiscalYear]\n        ,d.[MonthNumberOfYear] AS [Month]\n        ,f.[SalesOrderNumber] AS [OrderNumber]\n        ,f.SalesOrderLineNumber AS LineNumber\n        ,f.OrderQuantity AS Quantity\n        ,f.ExtendedAmount AS Amount  \n    FROM\n        [dbo].[FactInternetSales] f\n    INNER JOIN [dbo].[DimDate] d\n        ON f.[OrderDateKey] = d.[DateKey]\n    INNER JOIN [dbo].[DimProduct] p\n        ON f.[ProductKey] = p.[ProductKey]\n    INNER JOIN [dbo].[DimProductSubcategory] psc\n        ON p.[ProductSubcategoryKey] = psc.[ProductSubcategoryKey]\n    INNER JOIN [dbo].[DimProductCategory] pc\n        ON psc.[ProductCategoryKey] = pc.[ProductCategoryKey]\n    INNER JOIN [dbo].[DimCustomer] c\n        ON f.[CustomerKey] = c.[CustomerKey]\n    INNER JOIN [dbo].[DimGeography] g\n        ON c.[GeographyKey] = g.[GeographyKey]\n    INNER JOIN [dbo].[DimSalesTerritory] s\n        ON g.[SalesTerritoryKey] = s.[SalesTerritoryKey] \n;\n\nGO\n-- vTimeSeries view supports the creation of time series data mining models.\n--      - Replaces earlier bike models with successor models.\n--      - Abbreviates model names to improve readability in mining model viewer\n--      - Concatenates model and region so that table only has one input.\n--      - Creates a date field indexed to monthly reporting date for use in prediction.\nCREATE VIEW [dbo].[vTimeSeries] \nAS\n    SELECT \n        CASE [Model] \n            WHEN 'Mountain-100' THEN 'M200' \n            WHEN 'Road-150' THEN 'R250' \n            WHEN 'Road-650' THEN 'R750' \n            WHEN 'Touring-1000' THEN 'T1000' \n            ELSE Left([Model], 1) + Right([Model], 3) \n        END + ' ' + [Region] AS [ModelRegion] \n        ,(Convert(Integer, [CalendarYear]) * 100) + Convert(Integer, [Month]) AS [TimeIndex] \n        ,Sum([Quantity]) AS [Quantity] \n        ,Sum([Amount]) AS [Amount]\n\t\t,CalendarYear\n\t\t,[Month]\n\t\t,DATEFROMPARTS([CalendarYear], [Month], 25)\n\t\tas ReportingDate\n    FROM \n        [dbo].[vDMPrep] \n    WHERE \n        [Model] IN ('Mountain-100', 'Mountain-200', 'Road-150', 'Road-250', \n            'Road-650', 'Road-750', 'Touring-1000') \n    GROUP BY \n        CASE [Model] \n            WHEN 'Mountain-100' THEN 'M200' \n            WHEN 'Road-150' THEN 'R250' \n            WHEN 'Road-650' THEN 'R750' \n            WHEN 'Touring-1000' THEN 'T1000' \n            ELSE Left(Model,1) + Right(Model,3) \n        END + ' ' + [Region] \n        ,(Convert(Integer, [CalendarYear]) * 100) + Convert(Integer, [Month])\n\t\t,CalendarYear\n\t\t,[Month]\n\t\t,DATEFROMPARTS([CalendarYear], [Month], 25);\nGO\n-- vTargetMail supports targeted mailing data model\n-- Uses vDMPrep to determine if a customer buys a bike and joins to DimCustomer\nCREATE VIEW [dbo].[vTargetMail] \nAS\n    SELECT\n        c.[CustomerKey], \n        c.[GeographyKey], \n        c.[CustomerAlternateKey], \n        c.[Title], \n        c.[FirstName], \n        c.[MiddleName], \n        c.[LastName], \n        c.[NameStyle], \n        c.[BirthDate], \n        c.[MaritalStatus], \n        c.[Suffix], \n        c.[Gender], \n        c.[EmailAddress], \n        c.[YearlyIncome], \n        c.[TotalChildren], \n        c.[NumberChildrenAtHome], \n        c.[EnglishEducation], \n        c.[SpanishEducation], \n        c.[FrenchEducation], \n        c.[EnglishOccupation], \n        c.[SpanishOccupation], \n        c.[FrenchOccupation], \n        c.[HouseOwnerFlag], \n        c.[NumberCarsOwned], \n        c.[AddressLine1], \n        c.[AddressLine2], \n        c.[Phone], \n        c.[DateFirstPurchase], \n        c.[CommuteDistance], \n        x.[Region], \n        x.[Age], \n        CASE x.[Bikes] \n            WHEN 0 THEN 0 \n            ELSE 1 \n        END AS [BikeBuyer]\n    FROM\n        [dbo].[DimCustomer] c INNER JOIN (\n            SELECT\n                [CustomerKey]\n                ,[Region]\n                ,[Age]\n                ,Sum(\n                    CASE [EnglishProductCategoryName] \n                        WHEN 'Bikes' THEN 1 \n                        ELSE 0 \n                    END) AS [Bikes]\n            FROM\n                [dbo].[vDMPrep] \n            GROUP BY\n                [CustomerKey]\n                ,[Region]\n                ,[Age]\n            ) AS [x]\n        ON c.[CustomerKey] = x.[CustomerKey]\n;\n\nGO\n\n/* vAssocSeqOrders supports assocation and sequence clustering data mmining models.\n      - Limits data to FY2020.\n      - Returns order case table.*/\nCREATE VIEW [dbo].[vAssocSeqOrders]\nAS\nSELECT DISTINCT OrderNumber, CustomerKey, Region, IncomeGroup\nFROM         dbo.vDMPrep\nWHERE     (FiscalYear = 2020)\nGO\n\n/* vAssocSeqLineItems supports assocation and sequence clustering data mmining models.\n      - Limits data to FY2020.\n      - Returns line item nested table.*/\nCREATE VIEW [dbo].[vAssocSeqLineItems]\nAS\nSELECT     OrderNumber, LineNumber, Model\nFROM         dbo.vDMPrep\nWHERE     (FiscalYear = 2020)\nGO\n\nCREATE TABLE [dbo].[FactResellerSales](\n\t[SalesOrderNumber] [nvarchar](20) NOT NULL,\n\t[SalesOrderLineNumber] [tinyint] NOT NULL,\n\t[ResellerKey] [int] NOT NULL,\n\t[ProductKey] [int] NOT NULL,\n\t[OrderDateKey] [int] NOT NULL,\n\t[DueDateKey] [int] NOT NULL,\n\t[ShipDateKey] [int] NULL,\n\t[EmployeeKey] [int] NOT NULL,\n\t[PromotionKey] [int] NOT NULL,\n\t[CurrencyKey] [int] NOT NULL,\n\t[SalesTerritoryKey] [int] NOT NULL,\n\t[OrderQuantity] [smallint] NOT NULL,\n\t[UnitPrice] [money] NOT NULL,\n\t[ExtendedAmount] [money] NOT NULL,\n\t[UnitPriceDiscountPct] [decimal](7, 4) NOT NULL,\n\t[DiscountAmount] [money] NOT NULL,\n\t[ProductStandardCost] [money] NOT NULL,\n\t[TotalProductCost] [money] NOT NULL,\n\t[SalesAmount] [money] NOT NULL,\n\t[TaxAmount] [money] NOT NULL,\n\t[FreightAmount] [money] NOT NULL,\n\t[CarrierTrackingNumber] [nvarchar](25) NULL,\n\t[CustomerPONumber] [nvarchar](25) NULL,\n\t[RevisionNumber] [tinyint] NOT NULL)\nGO\n\nCREATE VIEW [dbo].[vFactSales]\nAS\n\tSELECT\n\t\tCAST(N'Reseller' AS NVARCHAR(10)) AS [Channel]\n\t\t,CAST(RIGHT([SalesOrderNumber], (LEN([SalesOrderNumber]) - 2)) AS INT) AS [SalesOrderKey]\n\t\t,((CAST(RIGHT([SalesOrderNumber], (LEN([SalesOrderNumber]) - 2)) AS INT) * 1000) + [SalesOrderLineNumber]) AS [SalesOrderLineKey]\n\t\t,[SalesOrderNumber]\n\t\t,[SalesOrderLineNumber]\n\t\t,[ResellerKey]\n\t\t,CAST(-1 AS INT) AS [CustomerKey]\n\t\t,[ProductKey]\n\t\t,[OrderDateKey]\n\t\t,[DueDateKey]\n\t\t,[ShipDateKey]\n\t\t,[PromotionKey]\n\t\t,[CurrencyKey]\n\t\t,[SalesTerritoryKey]\n\t\t,[EmployeeKey]\n\t\t,[OrderQuantity]\n\t\t,[UnitPrice]\n\t\t,[ExtendedAmount]\n\t\t,[UnitPriceDiscountPct]\n\t\t,[DiscountAmount]\n\t\t,[ProductStandardCost]\n\t\t,[TotalProductCost]\n\t\t,[SalesAmount]\n\t\t,[TaxAmount]\n\t\t,[FreightAmount]\n\t\t,[CarrierTrackingNumber]\n\t\t,[CustomerPONumber]\n\t\t,[RevisionNumber]\n\tFROM\n\t\t[dbo].[FactResellerSales]\n\tUNION ALL\n\tSELECT\n\t\tCAST(N'Internet' AS NVARCHAR(10)) AS [Channel]\n\t\t,CAST(RIGHT([SalesOrderNumber], (LEN([SalesOrderNumber]) - 2)) AS INT) AS [SalesOrderKey]\n\t\t,((CAST(RIGHT([SalesOrderNumber], (LEN([SalesOrderNumber]) - 2)) AS INT) * 1000) + [SalesOrderLineNumber]) AS [SalesOrderLineKey]\n\t\t,[SalesOrderNumber]\n\t\t,[SalesOrderLineNumber]\n\t\t,CAST(-1 AS INT) AS [ResellerKey]\n\t\t,[CustomerKey]\n\t\t,[ProductKey]\n\t\t,[OrderDateKey]\n\t\t,[DueDateKey]\n\t\t,[ShipDateKey]\n\t\t,[PromotionKey]\n\t\t,[CurrencyKey]\n\t\t,[SalesTerritoryKey]\n\t\t,CAST(-1 AS INT) AS [EmployeeKey]\n\t\t,[OrderQuantity]\n\t\t,[UnitPrice]\n\t\t,[ExtendedAmount]\n\t\t,[UnitPriceDiscountPct]\n\t\t,[DiscountAmount]\n\t\t,[ProductStandardCost]\n\t\t,[TotalProductCost]\n\t\t,[SalesAmount]\n\t\t,[TaxAmount]\n\t\t,[FreightAmount]\n\t\t,[CarrierTrackingNumber]\n\t\t,[CustomerPONumber]\n\t\t,[RevisionNumber]\n\tFROM\n\t\t[dbo].[FactInternetSales];\nGO\n\nCREATE TABLE [dbo].[AdventureWorksDWBuildVersion](\n\t[DBVersion] [nvarchar](50) NULL,\n\t[VersionDate] [datetime] NULL\n)\nGO\n\nCREATE TABLE [dbo].[DimAccount](\n\t[AccountKey] [int] IDENTITY(1,1) NOT NULL,\n\t[ParentAccountKey] [int] NULL,\n\t[AccountCodeAlternateKey] [int] NULL,\n\t[ParentAccountCodeAlternateKey] [int] NULL,\n\t[AccountDescription] [nvarchar](50) NULL,\n\t[AccountType] [nvarchar](50) NULL,\n\t[Operator] [nvarchar](50) NULL,\n\t[CustomMembers] [nvarchar](300) NULL,\n\t[ValueType] [nvarchar](50) NULL,\n\t[CustomMemberOptions] [nvarchar](200) NULL)\n\nGO\nCREATE TABLE [dbo].[DimCurrency](\n\t[CurrencyKey] [int] IDENTITY(1,1) NOT NULL,\n\t[CurrencyAlternateKey] [nchar](3) NOT NULL,\n\t[CurrencyName] [nvarchar](50) NOT NULL,\n\t[FormatString] [nvarchar](20) NULL)\n\nGO\nCREATE TABLE [dbo].[DimDepartmentGroup](\n\t[DepartmentGroupKey] [int] IDENTITY(1,1) NOT NULL,\n\t[ParentDepartmentGroupKey] [int] NULL,\n\t[DepartmentGroupName] [nvarchar](50) NULL)\n\nGO\nCREATE TABLE [dbo].[DimEmployee](\n\t[EmployeeKey] [int] IDENTITY(1,1) NOT NULL,\n\t[ParentEmployeeKey] [int] NULL,\n\t[EmployeeNationalIDAlternateKey] [nvarchar](15) NULL,\n\t[ParentEmployeeNationalIDAlternateKey] [nvarchar](15) NULL,\n\t[SalesTerritoryKey] [int] NULL,\n\t[FirstName] [nvarchar](50) NOT NULL,\n\t[LastName] [nvarchar](50) NOT NULL,\n\t[MiddleName] [nvarchar](50) NULL,\n\t[NameStyle] [bit] NOT NULL,\n\t[Title] [nvarchar](50) NULL,\n\t[HireDate] [date] NULL,\n\t[BirthDate] [date] NULL,\n\t[LoginID] [nvarchar](256) NULL,\n\t[EmailAddress] [nvarchar](50) NULL,\n\t[Phone] [nvarchar](25) NULL,\n\t[MaritalStatus] [nchar](1) NULL,\n\t[EmergencyContactName] [nvarchar](50) NULL,\n\t[EmergencyContactPhone] [nvarchar](25) NULL,\n\t[SalariedFlag] [bit] NULL,\n\t[Gender] [nchar](1) NULL,\n\t[PayFrequency] [tinyint] NULL,\n\t[BaseRate] [money] NULL,\n\t[VacationHours] [smallint] NULL,\n\t[SickLeaveHours] [smallint] NULL,\n\t[CurrentFlag] [bit] NOT NULL,\n\t[SalespersonFlag] [bit] NOT NULL,\n\t[DepartmentName] [nvarchar](50) NULL,\n\t[StartDate] [date] NULL,\n\t[EndDate] [date] NULL,\n\t[Status] [nvarchar](50) NULL,\n\t[EmployeePhoto] [varbinary](max) NULL)\nWITH  \n  (   \n    CLUSTERED INDEX (EmployeeKey)  \n  ); \nGO\nCREATE TABLE [dbo].[DimOrganization](\n\t[OrganizationKey] [int] IDENTITY(1,1) NOT NULL,\n\t[ParentOrganizationKey] [int] NULL,\n\t[PercentageOfOwnership] [nvarchar](16) NULL,\n\t[OrganizationName] [nvarchar](50) NULL,\n\t[CurrencyKey] [int] NULL)\n\nGO\nCREATE TABLE [dbo].[DimPromotion](\n\t[PromotionKey] [int] IDENTITY(1,1) NOT NULL,\n\t[PromotionAlternateKey] [int] NULL,\n\t[EnglishPromotionName] [nvarchar](255) NULL,\n\t[SpanishPromotionName] [nvarchar](255) NULL,\n\t[FrenchPromotionName] [nvarchar](255) NULL,\n\t[DiscountPct] [float] NULL,\n\t[EnglishPromotionType] [nvarchar](50) NULL,\n\t[SpanishPromotionType] [nvarchar](50) NULL,\n\t[FrenchPromotionType] [nvarchar](50) NULL,\n\t[EnglishPromotionCategory] [nvarchar](50) NULL,\n\t[SpanishPromotionCategory] [nvarchar](50) NULL,\n\t[FrenchPromotionCategory] [nvarchar](50) NULL,\n\t[StartDate] [datetime] NOT NULL,\n\t[EndDate] [datetime] NULL,\n\t[MinQty] [int] NULL,\n\t[MaxQty] [int] NULL)\nGO\n\nCREATE TABLE [dbo].[DimReseller](\n\t[ResellerKey] [int] IDENTITY(1,1) NOT NULL,\n\t[GeographyKey] [int] NULL,\n\t[ResellerAlternateKey] [nvarchar](15) NULL,\n\t[Phone] [nvarchar](25) NULL,\n\t[BusinessType] [varchar](20) NOT NULL,\n\t[ResellerName] [nvarchar](50) NOT NULL,\n\t[NumberEmployees] [int] NULL,\n\t[OrderFrequency] [char](1) NULL,\n\t[OrderMonth] [tinyint] NULL,\n\t[FirstOrderYear] [int] NULL,\n\t[LastOrderYear] [int] NULL,\n\t[ProductLine] [nvarchar](50) NULL,\n\t[AddressLine1] [nvarchar](60) NULL,\n\t[AddressLine2] [nvarchar](60) NULL,\n\t[AnnualSales] [money] NULL,\n\t[BankName] [nvarchar](50) NULL,\n\t[MinPaymentType] [tinyint] NULL,\n\t[MinPaymentAmount] [money] NULL,\n\t[AnnualRevenue] [money] NULL,\n\t[YearOpened] [int] NULL)\nGO\n\nCREATE TABLE [dbo].[DimSalesReason](\n\t[SalesReasonKey] [int] IDENTITY(1,1) NOT NULL,\n\t[SalesReasonAlternateKey] [int] NOT NULL,\n\t[SalesReasonName] [nvarchar](50) NOT NULL,\n\t[SalesReasonReasonType] [nvarchar](50) NOT NULL)\nGO\n\nCREATE TABLE [dbo].[DimScenario](\n\t[ScenarioKey] [int] IDENTITY(1,1) NOT NULL,\n\t[ScenarioName] [nvarchar](50) NULL)\nGO\n\nCREATE TABLE [dbo].[FactCallCenter](\n\t[FactCallCenterID] [int] IDENTITY(1,1) NOT NULL,\n\t[DateKey] [int] NOT NULL,\n\t[WageType] [nvarchar](15) NOT NULL,\n\t[Shift] [nvarchar](20) NOT NULL,\n\t[LevelOneOperators] [smallint] NOT NULL,\n\t[LevelTwoOperators] [smallint] NOT NULL,\n\t[TotalOperators] [smallint] NOT NULL,\n\t[Calls] [int] NOT NULL,\n\t[AutomaticResponses] [int] NOT NULL,\n\t[Orders] [int] NOT NULL,\n\t[IssuesRaised] [smallint] NOT NULL,\n\t[AverageTimePerIssue] [smallint] NOT NULL,\n\t[ServiceGrade] [float] NOT NULL)\nGO\n\nCREATE TABLE [dbo].[FactCurrencyRate](\n\t[CurrencyKey] [int] NOT NULL,\n\t[DateKey] [int] NOT NULL,\n\t[AverageRate] [float] NOT NULL,\n\t[EndOfDayRate] [float] NOT NULL)\nGO\n\nCREATE TABLE [dbo].[FactFinance](\n\t[FinanceKey] [int] IDENTITY(1,1) NOT NULL,\n\t[DateKey] [int] NOT NULL,\n\t[OrganizationKey] [int] NOT NULL,\n\t[DepartmentGroupKey] [int] NOT NULL,\n\t[ScenarioKey] [int] NOT NULL,\n\t[AccountKey] [int] NOT NULL,\n\t[Amount] [money] NOT NULL\n) \nGO\n\nCREATE TABLE [dbo].[FactInternetSalesReason](\n\t[SalesOrderNumber] [nvarchar](20) NOT NULL,\n\t[SalesOrderLineNumber] [tinyint] NOT NULL,\n\t[SalesReasonKey] [int] NOT NULL)\nGO\n\nCREATE TABLE [dbo].[FactProductInventory](\n\t[ProductKey] [int] NOT NULL,\n\t[DateKey] [int] NOT NULL,\n\t[UnitCost] [money] NOT NULL,\n\t[UnitsIn] [int] NOT NULL,\n\t[UnitsOut] [int] NOT NULL,\n\t[UnitsBalance] [int] NOT NULL)\nGO\n\nCREATE TABLE [dbo].[FactSalesQuota](\n\t[SalesQuotaKey] [int] IDENTITY(1,1) NOT NULL,\n\t[EmployeeKey] [int] NOT NULL,\n\t[DateKey] [int] NOT NULL,\n\t[SalesAmountQuota] [money] NOT NULL)\n\nGO",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "DP500DWH",
				"poolName": "DP500DWH"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}